<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/jdbc
	http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven>
    <message-converters>
<!--         <beans:bean class="org.springframework.http.converter.StringHttpMessageConverter"/> -->
<!--         <beans:bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/> -->
        <beans:bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
    </message-converters>
	</annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/images/**" location="/images/" /> 

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<interceptors>
		<beans:bean class="com.shan.interceptor.LoginInterceptor" />
	</interceptors>
	
	<!-- 	<mvc:interceptors>   -->
<!-- 	        <mvc:interceptor>   -->
<!-- 	            设置拦截的路径   -->
<!-- 	          <mvc:mapping path="/login1.htm" />   -->
<!-- 	          <mvc:mapping path="/login2.htm" />   -->
<!-- 	          <bean class="com.yjde.web.interceptor.TimeInterceptor">   -->
<!-- 	              openingTime 属性指定上班时间   -->
<!-- 	              <property name="openingTime">   -->
<!-- 	                  <value>12</value>   -->
<!-- 	              </property>   -->
<!-- 	              closingTime属性指定下班时间   -->
<!-- 	              <property name="closingTime">   -->
<!-- 	                  <value>14</value>   -->
<!-- 	              </property>   -->
<!-- 	              outsideOfficeHoursPage属性指定提示页面的URL   -->
<!-- 	              <property name="outsideOfficeHoursPage">   -->
<!-- 	                  <value>http://localhost:8080/SpringMVCInterceptor/jsp/outsideOfficeHours.jsp   -->
<!-- 	                  </value>   -->
<!-- 	              </property>   -->
<!-- 	          </bean>   -->
<!-- 	      </mvc:interceptor>   -->
<!-- 	  </mvc:interceptors>   -->
	
	<context:component-scan base-package="com.shan.*" />
	
	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="/WEB-INF/messages" />
	</beans:bean>
	
	<beans:bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="locations">
		<beans:list>
		<beans:value>/WEB-INF/jdbc.properties</beans:value>
		</beans:list>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <beans:property name="driverClass" value="${jdbc.driverClassName}" />
        <beans:property name="jdbcUrl" value="${jdbc.url}" />
        <beans:property name="username" value="${jdbc.username}" />
        <beans:property name="password" value="${jdbc.password}" />
        <beans:property name="idleConnectionTestPeriodInMinutes" value="60" />
        <beans:property name="idleMaxAgeInMinutes" value="120" />
        <beans:property name="maxConnectionsPerPartition" value="5" />
        <beans:property name="minConnectionsPerPartition" value="2" />
        <beans:property name="partitionCount" value="3" />
        <beans:property name="acquireIncrement" value="10" />
        <beans:property name="statementsCacheSize" value="50" />
        <beans:property name="connectionTestStatement" value="select 1 from dual" />
    </beans:bean>
    
	<!-- A transaction manager for working with JDBC DataSources -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
     <beans:bean id = "jdbcTemplate" class = "org.springframework.jdbc.core.JdbcTemplate" >
         <beans:property name = "dataSource">
             <beans:ref bean = "dataSource"/>
         </beans:property>
     </beans:bean>
    
	<!-- Configure the multipart resolver -->
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">      
    </beans:bean>
	
	<default-servlet-handler/> 
	
</beans:beans>
